<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="updateVendorInvoicesGroup1">
 <resultMap type="java.util.HashMap" id="getValuesGroup1-map">
  <result property="doc_type" column="doc_type" javaType="java.lang.String" />
  <result property="assignment" column="assignment" javaType="java.lang.String" />
  <result property="clear_doc" column="clear_doc" javaType="java.lang.String" />
  <result property="trx_mode" column="trx_mode" javaType="java.lang.String" />
  <result property="load_id" column="load_id" javaType="java.lang.Long" />
  <result property="DOC_TYPE_CODE" column="DOC_TYPE_CODE"
   javaType="java.lang.String" />
  <result property="INVOICE_NO_DERIVED" column="INVOICE_NO_DERIVED"
   javaType="java.lang.String" />
 </resultMap>
 <select id="getValuesGroup1" resultMap="getValuesGroup1-map">

  select
  stage.doc_type as doc_type,
  stage.assignment as assignment,
  stage.clear_doc as clear_doc,
  stage.trx_mode as trx_mode,
  inv.load_id as load_id,

  case when stage.trx_mode = 'H' then 'INVOICE' ELSE 'CREDIT' end as
  DOC_TYPE_CODE,
  case when stage.trx_mode = 'H' then stage.assignment ELSE stage.clear_doc
  end as INVOICE_NO_DERIVED

  from vendor_invoice_load stage
  left join kv_vendor_invoices inv on stage.id = inv.load_id
  where stage.doc_type in ('AA', 'AB', 'GA');
 </select>

 <update id="mergeVendorInvoicesGroup1">


  insert into kv_vendor_invoices (doc_type, assignment, clear_doc, trx_mode,
  load_id, doc_type_code, invoice_no)
  select
  stage.doc_type as doc_type,
  stage.assignment as assignment,
  stage.clear_doc as clear_doc,
  stage.trx_mode as trx_mode,
  stage.id as load_id,
  case when stage.trx_mode = 'H' then 'INVOICE' ELSE 'CREDIT' end as
  doc_type_code,
  case when stage.trx_mode = 'H' then stage.assignment ELSE stage.clear_doc
  end as invoice_no
  from vendor_invoice_load stage
  where stage.doc_type in ('AA', 'AB', 'GA')
  on CONFLICT (load_id)
  DO UPDATE
  set invoice_no = EXCLUDED.invoice_no, load_id = EXCLUDED.load_id,
  doc_type = EXCLUDED.doc_type, assignment = EXCLUDED.assignment,
  clear_doc = EXCLUDED.clear_doc,
  trx_mode = EXCLUDED.trx_mode, doc_type_code = EXCLUDED.doc_type_code;
 </update>
 
 <!-- kv_vendor_payments: clearing_date -->
 
 <update id="updateTest">
 
 <include refid="sqlVendorInvoicesFragment" />
  select
  nextval('kv_vendor_invoices_id') as id,
  58 as tenant_id,
  0 as import_id,
  <!-- use vendor_no and company code to get account_id -->
  stage.account_id,
  stage.invoice_date,
  
  stage.invoice_description as invoice_description,
  stage.invoice_due_date as invoice_due_date,
  stage.invoice_amount,
  0 as invoice_outstanding,
  0 as dpd,
  0 as mpd,
  0 as status_id,
  current_timestamp as created_at,
  current_timestamp as updated_at,
  '0' as created_by,
  '0' as updated_by,
  2 as invoice_status_id,
  0 as invoice_outstanding_with_interest,
  stage.gst,
  0 as import_status_id,
  cast(null as text) as import_note,
  0 as branch_id,
  cast(null as text) as branch_code,
  false as in_aging,
  cast(null as text) as invoice_pic_code,
  cast(null as text) as invoice_pic_name,
  current_timestamp as last_listener_run,
  
  stage.vendor_no as vendor_no,
  stage.gst_code as tax_code,
  stage.tax_id,
  stage.clear_doc as clearing_doc,
  stage.reference,
  stage.assignment as assignment,
  stage.document_id,
  stage.business_area_id,
  stage.tax_amount,
  
  stage.transaction_no as document_no,
  stage.trx_mode as mode,
  stage.amount_dc,
  stage.amount_lc,
  stage.purchase_order_no,
  stage.gst_code as gst_code,
  0 as portal_status_id,
  stage.cheque_no,
  stage.currency_code,
  stage.document_status_id,
  0 as invoice_outstanding_dc,
  stage.entered_date as entered_date,
  stage.transaction_date as transaction_date,
  stage.payment_term,
  stage.baseline_date,
  0 as cleardoc_id,
  0 as reference_id,
  stage.alt_payee,
  stage.item_no as item_no,
  cast(null as text) as alternate_payee2,
  stage.id as load_id,
  case when stage.trx_mode = 'H' then stage.assignment ELSE stage.clear_doc end as invoice_no,
  case when stage.trx_mode = 'H' then 'INVOICE' ELSE 'CREDIT' end as line_of_business,
  case when stage.trx_mode = 'H' then stage.assignment ELSE stage.clear_doc end as payment_reference
  
  from vendor_invoice_load stage
 
  where stage.doc_type in ('AA', 'AB', 'GA')
  on CONFLICT (load_id)
  DO UPDATE
  set invoice_no = EXCLUDED.invoice_no, load_id = EXCLUDED.load_id,
  doc_type = EXCLUDED.doc_type, assignment = EXCLUDED.assignment,
  clear_doc = EXCLUDED.clear_doc,
  trx_mode = EXCLUDED.trx_mode, doc_type_code = EXCLUDED.doc_type_code;
 
 
 </update>
 
 
 
 
</mapper>